extends Node

enum MinionTypes{
	NONE,
	NORMAL,
	FLYING,
	PLANT,
	WATER,
	EARTH,
	FIRE,
	ELECTRIC,
	ROBOT,
	DINO,
	UNDEAD,
	DEMONIC,
	HOLY,
	ICE,
	TITAN,
}

enum MoveTypes{
	NONE,
	PASSIVE,
	NORMAL,
	FLYING,
	PLANT,
	WATER,
	EARTH,
	FIRE,
	ELECTRIC,
	ROBOT,
	DINO,
	UNDEAD,
	DEMONIC,
	HOLY,
	ICE,
	TITAN,
}

enum MoveClasses{
	SEAR,
	BURN,
	FIRE_BASH,
	FIRE_BOLT,
	FLARE_UP,
	FIRE_BLAST,
	FIRE_RAM,
	WILDFIRE,
	INFLAME,
	KINDLE,
	WARMTH,
	TOUCH_FIRE,
	FIRE_SHOT,
	INTENSE_FLAME,
	BLAZE,
	CLAW,
	TACKLE,
	POISON_TOOTH,
	RECKLESS_DASH,
	CRUSH,
	ROAR,
	SPIKE,
	POUND,
	GRIND,
	WILD_LANCE,
	SLOW,
	REFLECT_DAMAGE,
	GROUP_REFLECT,
	TIRE,
	PERSEVERANCE,
	FORTITUDE,
	HULK_INSPIRATION,
	EFFICIENCY,
	SKILLFUL,
	ENERGIZING_INSPIRATION,
	VICIOUS,
	FEROCITY,
	DEADLY_INSPIRATION,
	PRIEST,
	CLERIC,
	MENDING_INSPIRATION,
	QUICKNESS,
	AGILITY,
	AGILE_INSPIRATION,
	MIRROR_SKIN,
	FOCUS,
	CONCENTRATION,
	ROCK_SKIN,
	DIAMOND_SKIN,
	DIAMOND_INSPIRATION,
	MIRROR_COATING,
	ENERGIZE,
	INVIGORATE,
	ROCK_THROW,
	ROCK_SLIDE,
	DESTABILIZE,
	EARTH_BARRIER,
	TAUNT,
	ROCK_BLAST,
	STONE_FALL,
	MUD_BLAST,
	EARTHQUAKE,
	STONEQUAKE,
	EARTH_SHIELD,
	CHOSEN_EARTH,
	EARTHY_FORTITUDE,
	CHARGE_BLAST,
	BATCH_BOLT,
	SPARK,
	CHARGE_PASS,
	STATIC_PUMMEL,
	THUNDERSTORM,
	OVERLOAD,
	BLINDING_JOLT,
	INFEST,
	RANCID_BITE,
	FLESH_SACRIFICE,
	HAUNT,
	PHANTOM_STRIKE,
	MORTIFY,
	LICH_BURN,
	DREAD_TRANSFER,
	SKIN_TRAP,
	DEMORALIZE,
	LIFELESS_TOUCH,
	ASHEN_REMINDER,
	DEATHLY_ENERGY,
	PREHISTORIC_BITE,
	FOCUSED_CHARGE,
	PIERCING_CHARGE,
	INNER_FORCE,
	RECKLESS_GRASP,
	BONE_CRUNCH,
	DEMORALIZING_CHARGE,
	METEOR_STRIKE,
	WILD_TACKLE,
	ANCIENT_FORCE,
	DRAIN,
	GRASSBLADE,
	SPORE_BLAST,
	NOURISH,
	REGROWTH,
	POISON_IVY,
	RAZOR_VINE,
	TREE_SLAM,
	TIMBER,
	RESURGENCE,
	SWIFT_MEND,
	SERENITY,
	MYSTIC_ICE,
	HAILSTONE,
	ICY_BLAST,
	SLEET,
	DRY_ICE,
	BONE_CHILL,
	COLDFRONT,
	ICE_SHIELD,
	ICE_ENCLOSURE,
	ICE_BARRIER,
	MADNESS,
	EVIL_EYE,
	DEMONIC_BARGAIN,
	FORCEFUL_HEAL,
	DEMONIC_SACRIFICE,
	DEMONIC_STRIKE,
	BLOOD_PRESS,
	DEMONIC_FORCE,
	CRAZED_BLAST,
	BLOOD_RITUAL,
	SOAK,
	WATER_SLAM,
	FRESH_STREAM,
	WATERJET,
	RAINFALL,
	REFRESHING_WAVE,
	WATER_INFUSION,
	OVERFLOW,
	WATERGIZE,
	PECK,
	WIND_LANCE,
	FLURRY,
	HURRICANE,
	CUTTING_WIND,
	BLOW_BY,
	VOLLEY,
	HOLY_STRIKE,
	PENANCE,
	HOPE,
	HOLY_LIGHT,
	CRUSADE,
	RIGHTEOUS_FATE,
	HOLY_BURN,
	BRILLIANCE,
	MARTYR,
	RIGHTEOUS_ZEAL,
	CLEANSING_HEAL,
	CLEANSE_DARKNESS,
	STEEL_SPIKE,
	COG_FALLOUT,
	TWIN_MISSILE,
	DOWNLOAD,
	ORE_DRILL,
	ALLOY_COAT,
	METAL_SHIELD,
	PLATINUM,
	SOLDER,
	METAL_MOLD,
	DEATH_CALL,
	TITAN_SLASH,
	KINGS_RUSH,
	TITAN_BLAST,
	DOMINATE,
	TITAN_SLAM,
	TITAN_RESTORE,
	TITAN_LIGHT,
	TITAN_HEAL,
	TITAN_RECOVERY,
	CRAZED,
	STUN,
	PURGE,
	DESPERATION,
}

var type_matrix : Dictionary = {
	MoveTypes.NONE : {
	},
	MoveTypes.PASSIVE : {
	},
	MoveTypes.ROBOT : {
	},
	MoveTypes.NORMAL : {
		MinionTypes.HOLY : 1,
		MinionTypes.TITAN : -1,
	},
	MoveTypes.FLYING : {
		MinionTypes.PLANT : 1,
		MinionTypes.WATER : 1,
		MinionTypes.ICE : 1,
		MinionTypes.ELECTRIC : -1,
		MinionTypes.TITAN : -1,
	},
	MoveTypes.WATER : {
		MinionTypes.EARTH : 1,
		MinionTypes.FIRE : 1,
		MinionTypes.ROBOT : 1,
		MinionTypes.DEMONIC : 1,
		MinionTypes.PLANT : -1,
		MinionTypes.WATER : -1,
		MinionTypes.ELECTRIC : -1,
		MinionTypes.DINO : -1, 
		MinionTypes.HOLY : -1,
	},
	MoveTypes.PLANT : {
		MinionTypes.WATER : 1,
		MinionTypes.EARTH : 1,
		MinionTypes.UNDEAD : 1,
		MinionTypes.PLANT : -1,
		MinionTypes.FIRE : -1,
		MinionTypes.ROBOT : -1,
		MinionTypes.DINO : -1,
	},
	MoveTypes.EARTH : {
		MinionTypes.FLYING : 1,
		MinionTypes.FIRE : 1,
		MinionTypes.ELECTRIC :1,
		MinionTypes.DINO : 1,
		MinionTypes.PLANT : -1,
		MinionTypes.WATER : -1,
		MinionTypes.EARTH : -1,
		MinionTypes.UNDEAD : -1,
	},
	MoveTypes.ICE : {
		MinionTypes.PLANT : 1,
		MinionTypes.DINO : 1,
		MinionTypes.TITAN : 1,
		MinionTypes.ICE : -1,
		MinionTypes.FIRE : -1,
	},
	MoveTypes.FIRE : {
		MinionTypes.PLANT : 1,
		MinionTypes.ICE : 1,
		MinionTypes.ROBOT : 1,
		MinionTypes.UNDEAD : 1,
		MinionTypes.WATER : -1,
		MinionTypes.FIRE : -1,
		MinionTypes.DEMONIC : -1,
	},
	MoveTypes.ELECTRIC : {
		MinionTypes.FLYING : 1,
		MinionTypes.WATER : 1,
		MinionTypes.ROBOT : 1,
		MinionTypes.EARTH : -1,
		MinionTypes.ELECTRIC : -1,
		MinionTypes.DINO : -1,
	},
	MoveTypes.DINO : {
		MinionTypes.PLANT : 1,
		MinionTypes.ELECTRIC : 1,
		MinionTypes.ROBOT : 1,
		MinionTypes.EARTH : -1,
		MinionTypes.ICE : -1,
	},
	MoveTypes.UNDEAD : {
		MinionTypes.NORMAL : 1,
		MinionTypes.EARTH : 1,
		MinionTypes.PLANT : -1,
		MinionTypes.FIRE : -1,
		MinionTypes.UNDEAD : -1,
		MinionTypes.DEMONIC : -1,
		MinionTypes.HOLY : -1,
	},
	MoveTypes.DEMONIC : {
		MinionTypes.NORMAL : 1,
		MinionTypes.PLANT : 1,
		MinionTypes.HOLY : 1,
		MinionTypes.FIRE : -1,
		MinionTypes.UNDEAD : -1,
		MinionTypes.DEMONIC : -1,
	},
	MoveTypes.HOLY : {
		MinionTypes.UNDEAD : 1,
		MinionTypes.DEMONIC : 1,
		MinionTypes.TITAN : 1,
		MinionTypes.NORMAL : -1,
		MinionTypes.FLYING : -1,
		MinionTypes.HOLY : -1,
	},
	MoveTypes.TITAN : {
		MinionTypes.ICE : 1,
		MinionTypes.DINO : 1,
		MinionTypes.TITAN : 1,
		MinionTypes.EARTH : -1,
		MinionTypes.HOLY : -1,
	},
}

func check_effectiveness(move_type : MoveTypes, minion_type1 : MinionTypes, minion_type2 : MinionTypes) -> int:
	var result : int = 0
	var list : Dictionary = type_matrix[move_type]
	if list.has(minion_type1):
		result += list[minion_type1]
	if list.has(minion_type2):
		result += list[minion_type2]
	return result
